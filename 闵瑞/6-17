#c++学习
	#分布式的工作流程
			现在你目前的项目在 /home/shiyanlou/gitproject 目录下，这是我们的 Git
		仓库（repository），也就是之前一直是用的库，另一个用户也想与你协作开发。
		他的工作目录在这台机器上，如何让他提交代码到你的 Git 仓库呢？
			首先，我们假设另一个用户也用 shiyanlou 用户登录，只是工作在不同的目
		录下开发代码，实际工作中不太可能发生，大部分情况都是多个用户，这个假设
		只是为了让实验简化。
		该用户需要从 Git 仓库进行克隆：
			//进入到临时目录
			cd /tmp
			//克隆之前的仓库，复制到myrepo下
			git clone /home/shiyanlou/gitproject myrepo
			//查看复制的目录下的文档信息
			ls -l myrepo
			返回结果为：
				-rw-rw-r-- 1 shiyanlou shiyanlou 31 Dec 22 08:24 README.md
				-rw-rw-r-- 1 shiyanlou shiyanlou  9 Dec 22 08:24 file1
			这就建了一个新的 "myrepo" 的目录，这个目录里包含了一份gitproject仓库
		的克隆。这份克隆和原始的项目一模一样，并且拥有原始项目的历史记录。
		接下来，
		
		在 myrepo 做了一些修改并且提交:
				//切换到myrepo目录
				cd /tmp/myrepo
				//添加新的文件，并写入内容"newcontent"
				echo "newcontent" > newfile
				//添加到缓存区
				git add newfile
				//提交修改
				git commit -m "add newfile"
				
			myrepo 修改完成后，如果我们想合并这份修改到 gitproject 的 git 仓
		库该如何做呢？
			可以在仓库 /home/shiyanlou/gitproject 中把myrepo的修改给拉 （pull）
		下来。执行下面几条命令:
				cd /home/shiyanlou/gitproject
				git pull /tmp/myrepo master 
				执行结果为：
					remote: Counting objects: 5， done.
					remote: Compressing objects: 100% （2/2）， done.
					remote: Total 3 （delta 0）， reused 0 （delta 0）
					Unpacking objects: 100% （3/3）， done.
					From /tmp/myrepo
					 * branch            master     -> FETCH_HEAD
					Updating 8bb57aa..866c452
					Fast-forward
					 newfile | 1 +
					 1 file changed， 1 insertion（+）
					 create mode 100644 newfile
		这就把 myrepo 的主分支合并到了 gitproject 的当前分支里了。
			git pull 命令等同于执行两个操作: 先使用 git fetch 从远程分支抓取最
		新的分支修改信息，然后使用 git merge 把修改合并进当前的分支。
		
		**注意**
			如果 gitproject 在 myrepo 修改文件内容的同时也做了修改的话，可能需要
		手工去修复冲突。
		
			如果你要经常操作远程分支（remote branch），你可以定义它们的缩写:
			git remote add myrepo /tmp/myrepo
			
			gitproject 里可以用 git fetch 来执行 git pull 前半部分的工作， 但是
		这条命令并不会把抓下来的修改合并到当前分支里：
				git fetch myrepo 
				返回结果为：
				From /tmp/myrepo
				 * [new branch]      master     -> myrepo/master
			获取后，我们可以通过 git log 查看远程分支做的所有修改，由于我们已经
		合并了所有修改，所以不会有任何输出：	
			git log -p master..myrepo/master
			
		当检查完修改后，gitproject 可以把修改合并到它的主分支中：
			git merge myrepo/master
			返回结果为：	
				Alreday up-to-date.
				
		**注意**
		如果我们在 myrepo 目录下执行 git pull 会发生什么呢？
			myrepo 会从克隆的位置拉取代码并更新本地仓库，就是把 gitproject 上的
		修改同步到本地:
			//进入到gitproject目录
			cd /home/shiyanlou/gitproject
			//添加一行内容到newfile
			echo "gitproject : new line" >> newfile
			//提交修改	
			git commit -a -m 'add newline to newfile'	//这里并没有add？
			返回结果为：	
				[master 8c31532] add newline to newfile
				 1 file changed， 1 insertion（+）
			//进入目录myrepo
			cd /tmp/myrepo
			//同步gitproject的所有修改
			git pull
			返回结果为：
				remote: Counting objects: 6， done.
				remote: Compressing objects: 100% （2/2）， done.
				remote: Total 3 （delta 1）， reused 0 （delta 0）
				Unpacking objects: 100% （3/3）， done.
				From /home/shiyanlou/gitproject
				   8bb57aa..8c31532  master     -> origin/master
				Updating 866c452..8c31532
				Fast-forward
				 newfile | 1 +
				 1 file changed， 1 insertion（+）
			因为 myrepo 是从 gitproject 仓库克隆的，那么他就不需要指定 gitproject
		仓库的地 址。因为 Git 把 gitproject 仓库的地址存储到 myrepo 的配置文件中，
		这个地址就是在 git pull 时默认使用的远程仓库：
			git config --get remote.origin.url
			返回结果为：
				/home/shiyanlou/gitproject
			如果 myrepo 和 gitproject 在不同的主机上，可以通过 ssh 协议来执行 clone 
		和pull 操作：
			git clone localhost:/home/shiyanlou/gitproject test
		这个命令会提示你输入 shiyanlou 用户的密码，用户密码随机。


##今日心得
	多操作才能收获更多意想不到的收获。
	
	
###明日计划
	git操作
	c++基础
	
			
			
			
