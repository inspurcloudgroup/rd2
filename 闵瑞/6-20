#c++学习
	#c++的基本输入输出
			c++标准库提供了一组丰富的输入/输出功能，本章将讨论c++变成中最基本和最常
		见的I/O操作。
			C++ 的 I/O 发生在流中，流是字节序列。如果字节流是从设备（如键盘、磁盘驱
		动器、网络连接等）流向内存，这叫做输入操作。如果字节流是从内存流向设备（如显
		示屏、打印机、磁盘驱动器、网络连接等），这叫做输出操作。
			
		#I/O库头文件
			下列的头文件在 C++ 编程中很重要。
			头文件：
			<iostream>： 该文件定义了 cin、cout、cerr 和 clog 对象，分别对应于标准
			输入流、标准输出流、非缓冲标准错误流和缓冲标准错误流。
			<iomanip>： 该文件通过所谓的参数化的流操纵器（比如 setw 和 setprecision），
			来声明对执行标准化 I/O 有用的服务。
			<fstream>： 该文件为用户控制的文件处理声明服务。我们将在文件和流的相关章
			节讨论它的细节。
		
		##标准输出流（cout）
				预定义的对象 cout 是 iostream 类的一个实例。cout 对象"连接"到标准输出
			设备，通常是显示屏。cout 是与流插入运算符 << 结合使用的。
			如下所示：
				#include <iostream>
 
				using namespace std;
				 
				int main( )
				{
				   char str[] = "Hello C++";
				 
				   cout << "Value of str is : " << str << endl;
				}
				返回结果为：
					Value of str is : Hello C++
				
				C++ 编译器根据要输出变量的数据类型，选择合适的流插入运算符来显示值。
			<< 运算符被重载来输出内置类型（整型、浮点型、double 型、字符串和指针）的
			数据项。
				流插入运算符 << 在一个语句中可以多次使用，如上面实例中所示，endl 用于
			在行末添加一个换行符。
			
		###标准输入流（cin）
				预定义的对象 cin 是 iostream 类的一个实例。cin 对象附属到标准输入
			设备，通常是键盘。cin 是与流提取运算符 >> 结合使用的。
			如下所示：
				#include <iostream>
 
				using namespace std;
				 
				int main( )
				{
				   char name[50];
				 
				   cout << "请输入您的名称： ";
				   cin >> name;  //通过键盘键入值给name
				   cout << "您的名称是： " << name << endl; 
				 
				}
					当上面的代码被编译和执行时，它会提示用户输入名称。当用户输入一
				个值，并按回车键，就会看到下列结果：
					请输入您的名称： cplusplus
					您的名称是： cplusplus
				
				C++ 编译器根据要输入值的数据类型，选择合适的流提取运算符来提取值，
			并把它存储在给定的变量中。
				流提取运算符 >> 在一个语句中可以多次使用，如果要求输入多个数据，可
			以使用如下语句：
				cin >> name >> age;
				这相当于下面两：
					cin >> name;
					cin >> age;
		
		####标准错误流（cerr）
				预定义的对象 cerr 是 iostream 类的一个实例。cerr 对象附属到标准错
			误设备，通常也是显示屏，但是 cerr 对象是非缓冲的，且每个流插入到 cerr
			都会立即输出。
				cerr 也是与流插入运算符 << 结合使用的，如下所示：
					#include <iostream>
 
					using namespace std;
					 
					int main( )
					{
					   char str[] = "Unable to read....";
					 
					   cerr << "Error message : " << str << endl;
					}
					返回结果为：	
						Error message : Unable to read....
						
		#####标准日志流（clog）
				预定义的对象 clog 是 iostream 类的一个实例。clog 对象附属到标准错
			误设备，通常也是显示屏，但是 clog 对象是缓冲的。这意味着每个流插入到 
			clog 都会先存储在缓冲在，直到缓冲填满或者缓冲区刷新时才会输出。
				clog 也是与流插入运算符 << 结合使用的，如下所示：
				#include <iostream>
 
				using namespace std;
				 
				int main( )
				{
				   char str[] = "Unable to read....";
				 
				   clog << "Error message : " << str << endl;
				}
				返回结果为:
					Error message : Unable to read....
	
	
	##c++数据结构
			C/C++ 数组允许定义可存储相同类型数据项的变量，但是结构是 C++ 中另一种
		用户自定义的可用的数据类型，它允许您存储不同类型的数据项。
			结构用于表示一条记录，假设您想要跟踪图书馆中书本的动态，您可能需要跟踪
		每本书的下列属性：
			Title ：标题 	Author ：作者	Subject ：类目	Book ID ：书的 ID
		
		#定义结构
				为了定义结构，您必须使用 struct 语句。struct 语句定义了一个包含多
			个成员的新的数据类型。
				struct 语句的格式如下：
					struct type_name {
					member_type1 member_name1;
					member_type2 member_name2;
					member_type3 member_name3;
					.
					.
					} object_names;
				type_name 是结构体类型的名称，member_type1 member_name1 是标准的变
				量定义，比如 int i; 或者 float f; 或者其他有效的变量定义。在结构定
				义的末尾，最后一个分号之前，您可以指定一个或多个结构变量，这是可选
				的。下面是声明一个结构体类型 Books，变量为 book：
					struct Books{
					   char  title[50];
					   char  author[50];
					   char  subject[100];
					   int   book_id;
					} book;
					

##今日心得
		学到这，发现之前不懂为什么要那样写代码，也变得很明了了，得到了很好的解释，
	这样就能在使用中更加灵活的使用这些规则。


###明日计划
	c++基础
	c++实验楼




