#c++学习
	#c++函数
	
		指针调用：
			向函数传递参数的指针调用方法，把参数的地址复制给形式参数。在函数内，改地址用于访问调用中要
			用到的实际参数。这意味着，修改形式参数会影响实际参数。
			例如：
				#include<iostream>
				using namespace std;
				
				//声明函数
				//*x表示从x地址获取值，*y表示从y地址获取值
				void swap(int *x,int *y);
				
				int main(){
					//声明局部变量
					int a=1;
					int b=2;
					
					cout << "交换前，a的值：" << a <<endl;
					cout << "交换前，b的值：" << b <<endl;
					
					//调用函数来交换a与b的值
					//&a表示指向a的地址，&b表示指向b的地址
					swap(&a, &b);
					
					cout << "交换后，a的值：" << a << endl;
					cout << "交换后，b的值：" << b << endl;
					
					return 0;
				}
				
				//定义函数
				void swap(int *x, int *y){
					int t;
					t = *x;
					*x = y;
					*y = t;
					
					return;
				
				}
				
				代码运行结果为：
					交换前，a的值：1
					交换前，b的值：2
					交换后，a的值：2
					交换后，b的值：1
				代码中 使用 &a，&b 是与x，y相对应，函数定义里面将x,y定义为参数地址，因此需要将a，b的地址
				传递过去，因此使用了 &a，&b 。
				意思就是，如果参数使用的是指针，则会从地址里面去获取值，从而修改的也就是地址里面的值，
				也就导致修改参数，从而修改地址理所存储的值。
				
		c++引用调用
			引用调用跟指针调用很相似，把参数的地址复制给形式参数，同样只要是对地址进行改动都会影响实际参数值
			所在地址存储的值。
			例如：
				#include<iostream>
				using namespace std;
				
				//声明函数
				//*x表示从x地址获取值，*y表示从y地址获取值
				void swap(int &x,int &y);
				
				int main(){
					//声明局部变量
					int a=1;
					int b=2;
					
					cout << "交换前，a的值：" << a <<endl;
					cout << "交换前，b的值：" << b <<endl;
					
					//调用函数来交换a与b的值
					//&a表示指向a的地址，&b表示指向b的地址
					swap(a, b);
					
					cout << "交换后，a的值：" << a << endl;
					cout << "交换后，b的值：" << b << endl;
					
					return 0;
				}
				
				//定义函数，从地址里引用参数值
				void swap(int &x, int &y){
					int t;
					t = x;
					x = y;
					y = t;
					
					return;
				
				}
				代码运行结果为：
					交换前，a的值：1
					交换前，b的值：2
					交换后，a的值：2
					交换后，b的值：1
				因此，引用调用和指针调用都会通过改变地址里面存储的值来改变实际参数的值。
				
		参数的默认值
			当定义一个函数，可以为参数列表后面的每一个参数指定默认值。当调用函数时，如果实际参数的值为空，则使用这
			个默认值，如果传递过来有实际参数值，则使用实际参数值。
			
			
	##c++数字
	
		c++数字
			也就是int、short、long、float、double等定义的一些变量的值。
			
		c++定义数字
			数据类型[int、short、long、float、double] 变量名 = 变量值;
			或者
			数据类型[int、short、long、float、double] 变量名;
			变量名 = 变量值;
			
		c++数学运算
			在c++里面我们可以各种函数，但是c++库里面拥有自己已经创建好的函数，这种函数成为内置函数。例如：
			[需要引用头文件 <cmath>]
			double cos(double);
				该函数返回弧度叫(double类型)的余弦；
			double sin(double);
				与cos相似，该函数是返回正弦值；
			double tan(double);
				该函数返回正切值；
			double log(double);
				该函数返回参数的自然对数；
			double pow(double, double);
				假设第一个参数为x，第二个为y，该函数返回x的y次方的值；
			double sqrt(double);
				返回参数的平方根；
			double hypot(double,double);
				该函数返回两个参数的平方总和的平方根，也就是直角三角形中，两个参数当直角边，返回斜边的值；
			double abs(int);
				返回参数的绝对值；
			double fabs(double);
				该函数返回任意一个十进制数的绝对值；
			double floor(double);
				该函数返回一个不大于参数值的最大整数值。

				
##今日心得
	由于学院突然有事，学习的东西并不算很多，但感觉掌握了七八成，觉得也是很有收获。
	
	
###明日计划
	继续学习c++				
					
					
					
					
					
					
					
